From bb501a689a1e3f289ba785b25c23e85db712e19a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sat, 16 May 2020 11:45:13 +0200
Subject: [PATCH 6/8] Qubes decoration: title colors

Add dark and light title colors

When overriding decoration colors, provide our own title colors as
well. Decide based on HSV whether the title should be dark or light.
Skip title shadow (except for Dom0 where we don't modify it).

This fixes black-on-black titles (QubesOS/qubes-issues#3854), but
also improves the appearance of other titles, especially when the
window is inactive. Before, the title color depended on XFCE theme,
which often looked bad combined with Qubes' title bar (ugly colors,
or similar brightness).

Authors:
@pwmarcz

Original work done in:
- QubesOS/qubes-desktop-linux-xfce4-xfwm4
---
 src/frame.c    | 11 +++++------
 src/screen.h   |  2 ++
 src/settings.c | 18 ++++++++++++++++++
 src/settings.h | 11 +++++++++++
 4 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/src/frame.c b/src/frame.c
index 07aac60ca..5434e2e5c 100644
--- a/src/frame.c
+++ b/src/frame.c
@@ -156,12 +156,11 @@ frameFillTitlePixmap (Client * c, int state, int part, int x, int w, int h, xfwm
 }
 
 static void
-frameDrawTitleText (ScreenInfo * screen_info, cairo_t * cr, PangoLayout * layout, int state, int x, int y)
+frameDrawTitleText (ScreenInfo * screen_info, Decoration *decoration, bool enable_shadow, cairo_t * cr, PangoLayout * layout, int state, int x, int y)
 {
     cairo_translate (cr, x, y);
-    if (screen_info->params->title_shadow[state])
+    if (enable_shadow && screen_info->params->title_shadow[state])
     {
-        // TODO?
         gdk_cairo_set_source_rgba (cr, &screen_info->title_shadow_colors[state]);
         if (screen_info->params->title_shadow[state] == TITLE_SHADOW_UNDER)
         {
@@ -182,7 +181,7 @@ frameDrawTitleText (ScreenInfo * screen_info, cairo_t * cr, PangoLayout * layout
             cairo_translate (cr, 0, -1);
         }
     }
-    gdk_cairo_set_source_rgba (cr, &screen_info->title_colors[state]);
+    gdk_cairo_set_source_rgba (cr, &decoration->title_colors[state]);
     pango_cairo_show_layout (cr, layout);
 }
 
@@ -358,7 +357,7 @@ frameCreateTitlePixmap (Client * c, int state, int left, int right, xfwmPixmap *
         cairo_rectangle(cr, title_x, title_y, right - w4, frameDecorationTop (decoration));
         cairo_clip(cr);
 
-        frameDrawTitleText (screen_info, cr, layout, state, title_x, title_y);
+        frameDrawTitleText (screen_info, decoration, c->qubes_label_color == QUBES_LABEL_DOM0, cr, layout, state, title_x, title_y);
 
         cairo_restore(cr);
     }
@@ -377,7 +376,7 @@ frameCreateTitlePixmap (Client * c, int state, int left, int right, xfwmPixmap *
         {
             frameFillTitlePixmap (c, state, TITLE_3, x, w3, top_height, title_pm, top_pm);
             title_x = hoffset + x;
-            frameDrawTitleText (screen_info, cr, layout, state, title_x, title_y);
+            frameDrawTitleText (screen_info, decoration, c->qubes_label_color == QUBES_LABEL_DOM0, cr, layout, state, title_x, title_y);
             x = x + w3;
         }
 
diff --git a/src/screen.h b/src/screen.h
index cf03da208..ccbf611cc 100644
--- a/src/screen.h
+++ b/src/screen.h
@@ -98,6 +98,8 @@ struct _Decoration
     xfwmPixmap top[TITLE_COUNT][2];
     xfwmPixmap corners_stretch[CORNER_COUNT][2];
     xfwmPixmap sides_stretch[SIDE_COUNT][2];
+
+    GdkRGBA title_colors[2];
 };
 
 struct _ScreenInfo
diff --git a/src/settings.c b/src/settings.c
index 44dd3b011..a89aad3d2 100644
--- a/src/settings.c
+++ b/src/settings.c
@@ -417,6 +417,24 @@ Decoration *getDecorationForColor(ScreenInfo *screen_info, guint32 color)
     g_strlcpy (imagename, "title-inactive-stretch", sizeof (imagename));
     xfwmPixmapLoad (screen_info, &decoration->sides_stretch[SIDE_TOP][INACTIVE], theme, imagename, screen_info->colsym, color);
 
+    if (color == QUBES_LABEL_DOM0) {
+        decoration->title_colors[0] = screen_info->title_colors[0];
+        decoration->title_colors[1] = screen_info->title_colors[1];
+    } else {
+        gdouble h, s, v;
+        gtk_rgb_to_hsv(
+            1.0*((color & 0xFF0000) >> 16)/0xFF,
+            1.0*((color & 0x00FF00) >>  8)/0xFF,
+            1.0*((color & 0x0000FF) >>  0)/0xFF,
+            &h, &s, &v);
+        if (v < 0.2) {
+            decoration->title_colors[0] = qubes_title_colors_light[0];
+            decoration->title_colors[1] = qubes_title_colors_light[1];
+        } else {
+            decoration->title_colors[0] = qubes_title_colors_dark[0];
+            decoration->title_colors[1] = qubes_title_colors_dark[1];
+        }
+    }
 
     g_hash_table_insert(screen_info->decoration, GINT_TO_POINTER(color), decoration);
     return decoration;
diff --git a/src/settings.h b/src/settings.h
index 4c2a40b2d..2ad175132 100644
--- a/src/settings.h
+++ b/src/settings.h
@@ -195,6 +195,17 @@ static const guint qubes_label_colors[] = {
     0x000000,   /* QUBES_LABEL_BLACK */
 };
 
+/* Title colors: active, inactive */
+static const GdkRGBA qubes_title_colors_dark[2] = {
+    { 0, 0, 0, 1 },
+    { 0.3, 0.3, 0.3, 1},
+};
+
+static const GdkRGBA qubes_title_colors_light[2] = {
+    { 0.8, 0.8, 0.8, 1 },
+    { 0.5, 0.5, 0.5, 1 },
+};
+
 struct _Settings
 {
     gchar  *option;
-- 
2.48.1

